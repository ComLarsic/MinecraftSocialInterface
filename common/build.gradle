architectury {
    common(rootProject.enabled_platforms.split(","))
}

loom {
    accessWidenerPath = file("src/main/resources/msimod.accesswidener")
}

dependencies {
    // We depend on fabric loader here to use the fabric @Environment annotations and get the mixin dependencies
    // Do NOT use other classes from fabric loader
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    // Remove the next line if you don't want to depend on the API
    modApi "dev.architectury:architectury:${rootProject.architectury_version}"

    // Jetty x
    modImplementation "org.eclipse.jetty:jetty-server:9.4.26.v20200117"
    modImplementation "org.eclipse.jetty:jetty-servlet:9.4.26.v20200117"
    modImplementation "org.eclipse.jetty:jetty-servlets:9.4.26.v20200117"
    modImplementation "org.eclipse.jetty.websocket:websocket-server:9.4.26.v20200117"
    modImplementation "javax.servlet:javax.servlet-api:3.1"
    // oauth2     
    modImplementation 'com.auth0:java-jwt:4.4.0'
    modImplementation 'com.auth0:jwks-rsa:0.22.1'
    modImplementation 'com.nimbusds:nimbus-jose-jwt:9.10.1'
}

publishing {
    publications {
        mavenCommon(MavenPublication) {
            artifactId = rootProject.archives_base_name
            from components.java
        }
    }
    repositories {
    }
}

// Call rollup in weblient
task rollup(type: Exec) {
    workingDir '../webclient'
    commandLine 'npm', 'run', 'build', '-c'
}

// Embed the html and js files into the jar
jar {
    dependsOn rollup
    from("../webclient/dist") {
        into("web")
    }
}